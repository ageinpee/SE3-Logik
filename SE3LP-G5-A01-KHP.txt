Blatt 1
----------------------------------------------------------
Aufg. 1
-------------
  1)
    ?- consult('familie.pl').
    true.

  2)
    ?- listing([mutter_von,vater_von]).
    :- dynamic mutter_von/2.

    mutter_von(marie, hans).
    mutter_von(marie, helga).
    mutter_von(julia, otto).
    mutter_von(barbara, klaus).
    mutter_von(barbara, andrea).
    mutter_von(charlotte, barbara).
    mutter_von(charlotte, magdalena).

    :- dynamic vater_von/2.

    vater_von(otto, hans).
    vater_von(otto, helga).
    vater_von(gerd, otto).
    vater_von(johannes, klaus).
    vater_von(johannes, andrea).
    vater_von(walter, barbara).
    vater_von(walter, magdalena).

    true.

  3)
    ?- assert(mutter_von(agathe, hans)).
    true.

    --> assert = assertz. assert/assertz fügen eine Klausel am Ende der Datenbasis ein.
          asserta fügt eine Klausel am Anfang der Datenbank ein.

Aufg. 2
-------------
  1)
    a)
      ?- vater_von(johannes, klaus).
      true.
    b)
      ?- mutter_von(A, helga).
      A = marie.
    c)
      ?- mutter_von(A, hans).
      A = agathe.
    d)
      ?- mutter_von(A, marie).
      false.
    e)
      ?- vater_von(johannes, A)
      A = klaus;
      A = andrea.
    f)
      ?- mutter_von(Mutter,Kind).
      Mutter = marie,
      Kind = hans 
      Mutter = marie,
      Kind = helga 
      Mutter = julia,
      Kind = otto 
      Mutter = barbara,
      Kind = klaus 
      Mutter = barbara,
      Kind = andrea 
      Mutter = charlotte,
      Kind = barbara 
      Mutter = charlotte,
      Kind = magdalena.
      ?- vater_von(Vater, Kind).
      Vater = otto,
      Kind = hans 
      Vater = otto,
      Kind = helga 
      Vater = gerd,
      Kind = otto 
      Vater = johannes,
      Kind = klaus 
      Vater = johannes,
      Kind = andrea 
      Vater = walter,
      Kind = barbara 
      Vater = walter,
      Kind = magdalena.
    g)
      ?- not(vater_von(klaus, A)).
      true.
    h)
      ?- not(mutter_von(barbara, A)).
      false.
    i)
      ?- not(not(mutter_von(barbara, A))).
      true.
  2)
    ?- mutter_von(charlotte, Eltern) , (mutter_von(Eltern, Kind); vater_von(Eltern, Kind)).
    Eltern = barbara,
    Kind = klaus 
    Eltern = barbara,
    Kind = andrea 
    false.
  3)
    Er zeigt an, was im "Hintergrund" passiert, also eine Art debug-mode. 
    Die "/n" steht für ob Argumente und welche übergeben werden.
    
    Die Systemausgaben zeigen drei Informationen:
    Port: (n) Ziel ?
    
    a)
      Port
      Im Vier-Port-Modell sind die vier Ports call, redo, exit und fail. 
      call ruft ein Prädikat auf. 
      redo ruft das Prädikat nach dem ersten bzw. den ersten Treffern wieder auf.
      exit beendet ein Prädikat mit Treffer(n).
      fail beendet ein Prädikat ohne Treffer.
      
    b)
      n steht für die aktuelle Rekusionstiefe.
      
    c)
      Ziel
      Das Ziel des aktuellen Rekursionsdurchlaufs wird gezeigt.
      Besteht noch keine Bindung einer Variable an ein Objekt, 
      bleibt die Variable nichtinstanziiert. 
      Im Zielprädikat sieht man dann anstelle der Variable so was wie _2776.
